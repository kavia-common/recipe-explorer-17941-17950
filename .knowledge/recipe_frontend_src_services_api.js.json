{"is_source_file": true, "format": "JavaScript", "description": "This file contains mock data and API functions for managing user authentication and recipe data in a recipe application. It includes predefined recipes, user data, and functions for sign-in, sign-up, fetching recipes, and toggling collections.", "external_files": [], "external_methods": ["setTimeout"], "published": ["apiSignIn", "apiSignUp", "apiGetRecipes", "apiGetRecipeById", "apiToggleFavorite", "apiAddToCollection", "apiRemoveFromCollection"], "classes": [], "methods": [{"name": "apiSignIn(email, password)", "description": "Signs in a user with email and password, returns user profile on success.", "scope": "", "scopeKind": ""}, {"name": "apiSignUp(name, email, password)", "description": "Registers a new user with name, email, and password, returns user profile.", "scope": "", "scopeKind": ""}, {"name": "apiGetRecipes({ q = '', ingredients = [], cuisine = '' } = {})", "description": "Retrieves recipes filtered by query, ingredients, and cuisine.", "scope": "", "scopeKind": ""}, {"name": "apiGetRecipeById(id)", "description": "Fetches a single recipe by its unique id.", "scope": "", "scopeKind": ""}, {"name": "apiToggleFavorite(userId, recipeId)", "description": "Toggles the favorite status of a recipe for a user.", "scope": "", "scopeKind": ""}, {"name": "apiAddToCollection(userId, recipeId)", "description": "Adds a recipe to the user's personal collection.", "scope": "", "scopeKind": ""}, {"name": "apiRemoveFromCollection(userId, recipeId)", "description": "Removes a recipe from the user's personal collection.", "scope": "", "scopeKind": ""}, {"name": "delay(ms)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["delay"], "search-terms": ["apiSignIn", "recipe data", "mock user", "FAKE_RECIPES", "apiGetRecipes", "recipe filtering", "user favorites", "recipe frontend"], "state": 2, "file_id": 14, "knowledge_revision": 29, "git_revision": "", "ctags": [{"_type": "tag", "name": "FAKE_RECIPES", "path": "/home/kavia/workspace/code-generation/recipe-explorer-17941-17950/recipe_frontend/src/services/api.js", "pattern": "/^const FAKE_RECIPES = [$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "apiAddToCollection", "path": "/home/kavia/workspace/code-generation/recipe-explorer-17941-17950/recipe_frontend/src/services/api.js", "pattern": "/^export async function apiAddToCollection(userId, recipeId) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, recipeId)"}, {"_type": "tag", "name": "apiGetRecipeById", "path": "/home/kavia/workspace/code-generation/recipe-explorer-17941-17950/recipe_frontend/src/services/api.js", "pattern": "/^export async function apiGetRecipeById(id) {$/", "language": "JavaScript", "kind": "function", "signature": "(id)"}, {"_type": "tag", "name": "apiGetRecipes", "path": "/home/kavia/workspace/code-generation/recipe-explorer-17941-17950/recipe_frontend/src/services/api.js", "pattern": "/^export async function apiGetRecipes({ q = '', ingredients = [], cuisine = '' } = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "({ q = '', ingredients = [], cuisine = '' } = {})"}, {"_type": "tag", "name": "apiRemoveFromCollection", "path": "/home/kavia/workspace/code-generation/recipe-explorer-17941-17950/recipe_frontend/src/services/api.js", "pattern": "/^export async function apiRemoveFromCollection(userId, recipeId) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, recipeId)"}, {"_type": "tag", "name": "apiSignIn", "path": "/home/kavia/workspace/code-generation/recipe-explorer-17941-17950/recipe_frontend/src/services/api.js", "pattern": "/^export async function apiSignIn(email, password) {$/", "language": "JavaScript", "kind": "function", "signature": "(email, password)"}, {"_type": "tag", "name": "apiSignUp", "path": "/home/kavia/workspace/code-generation/recipe-explorer-17941-17950/recipe_frontend/src/services/api.js", "pattern": "/^export async function apiSignUp(name, email, password) {$/", "language": "JavaScript", "kind": "function", "signature": "(name, email, password)"}, {"_type": "tag", "name": "apiToggleFavorite", "path": "/home/kavia/workspace/code-generation/recipe-explorer-17941-17950/recipe_frontend/src/services/api.js", "pattern": "/^export async function apiToggleFavorite(userId, recipeId) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, recipeId)"}, {"_type": "tag", "name": "delay", "path": "/home/kavia/workspace/code-generation/recipe-explorer-17941-17950/recipe_frontend/src/services/api.js", "pattern": "/^function delay(ms) {$/", "language": "JavaScript", "kind": "function", "signature": "(ms)"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/recipe-explorer-17941-17950/recipe_frontend/src/services/api.js", "pattern": "/^  const newUser = { id: `u${users.length + 1}`, email, password, name, favorites: [], collection/", "language": "JavaScript", "kind": "field", "scope": "apiSignUp.newUser", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/recipe-explorer-17941-17950/recipe_frontend/src/services/api.js", "pattern": "/^  const newUser = { id: `u${users.length + 1}`, email, password, name, favorites: [], collection/", "language": "JavaScript", "kind": "property", "scope": "apiSignUp.newUser", "scopeKind": "class"}, {"_type": "tag", "name": "newUser", "path": "/home/kavia/workspace/code-generation/recipe-explorer-17941-17950/recipe_frontend/src/services/api.js", "pattern": "/^  const newUser = { id: `u${users.length + 1}`, email, password, name, favorites: [], collection/", "language": "JavaScript", "kind": "class", "scope": "apiSignUp", "scopeKind": "class"}, {"_type": "tag", "name": "users", "path": "/home/kavia/workspace/code-generation/recipe-explorer-17941-17950/recipe_frontend/src/services/api.js", "pattern": "/^let users = [$/", "language": "JavaScript", "kind": "variable"}], "hash": "49929df5f65a919882ccb664925062cd", "format-version": 4, "code-base-name": "recipe_frontend", "filename": "recipe_frontend/src/services/api.js", "fields": [{"name": "const newUser = { id: `u${users.length + 1}`, email, password, name, favorites: [], collection/", "scope": "apiSignUp.newUser", "scopeKind": "class", "description": "unavailable"}, {"name": "let users = [", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"29": ""}]}